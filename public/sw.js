if(!self.define){const e=e=>{"require"!==e&&(e+=".js");let r=Promise.resolve();return s[e]||(r=new Promise((async r=>{if("document"in self){const s=document.createElement("script");s.src=e,document.head.appendChild(s),s.onload=r}else importScripts(e),r()}))),r.then((()=>{if(!s[e])throw new Error(`Module ${e} didnâ€™t register its module`);return s[e]}))},r=(r,s)=>{Promise.all(r.map(e)).then((e=>s(1===e.length?e[0]:e)))},s={require:Promise.resolve(r)};self.define=(r,i,t)=>{s[r]||(s[r]=Promise.resolve().then((()=>{let s={};const n={uri:location.origin+r.slice(1)};return Promise.all(i.map((r=>{switch(r){case"exports":return s;case"module":return n;default:return e(r)}}))).then((e=>{const r=t(...e);return s.default||(s.default=r),s}))})))}}define("./sw.js",["./workbox-43c73b52"],(function(e){"use strict";self.addEventListener("message",(e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()})),e.precacheAndRoute([{url:"chat.html",revision:"90644fdc7b8f88288cbddbfe639da8be"},{url:"chatcord-192.png",revision:"b7638a6038e9beeacb24b229b293519c"},{url:"chatcord-512.png",revision:"f37d8a25f372d488089a8536e47bf3a2"},{url:"css/style.css",revision:"dfcf5a2419ca0b30bf18f5c99118f0e9"},{url:"index.html",revision:"ca115b174ed00fb98467492fc22ddf01"},{url:"js/main.js",revision:"127fc025fa42d43e565538ff5915644f"},{url:"manifest.json",revision:"a43669d1ea3e381d7e5bea3b3052839c"}],{ignoreURLParametersMatching:[/^utm_/,/^fbclid$/]})}));
//# sourceMappingURL=sw.js.map
